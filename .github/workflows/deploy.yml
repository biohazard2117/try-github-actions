name: Validation_Gauntlet

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Install virtualenv
      run: pip install virtualenv

    - name: Create virtual environment
      run: virtualenv venv

    - name: Activate virtual environment
      run: source venv/bin/activate

    - name: Install dependencies
      run: pip install -r requirements.txt


  # lint:
  #   runs-on: ubuntu-latest
  #   needs: install

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: 3.x

  #   - name: Restore virtual environment from cache
  #     uses: actions/cache@v3
  #     with:
  #       path: venv
  #       key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
  #       restore-keys: |
  #         ${{ runner.os }}-venv-
  #   - name: Activate virtual environment
  #     run: |
  #       source venv/bin/activate

  #   - name: Install flake8
  #     run: pip install flake8
    
  #   - name: Lint code
  #     run: |
  #       flake8 .

  build:
    runs-on: ubuntu-latest
    needs: [install]
    env: 
      PYTHONPATH: "./venv/bin"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Restore virtual environment from cache
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
    
    # - name: checking the directory
    #   run: |
    #     pwd 
    #     ls

    - name: Activate virtual environment
      run: source venv/bin/activate

    # - name: Install dependencies
    #   run: pip install -r requirements.txt

    - name: Make log files folder 
      run: mkdir log_files

    - name: Add Python and Django to PATH
      run: echo 'export PATH="$PATH:/venv/bin:/venv/lib/python3.9/site-packages/django/bin"' >> $GITHUB_ENV
      
    - name: Build project
      run: python3 manage.py check